# =============================================================================
# Automation Global - Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in the actual values
# IMPORTANT: Never commit .env files with real secrets to version control
# =============================================================================

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------
# Environment: development, production, test
NODE_ENV=development

# Port for the application
PORT=5000

# Enable debug mode (true/false)
DEBUG=true

# Overall environment identifier
ENVIRONMENT=development

# Logging level: DEBUG, INFO, WARN, ERROR
LOG_LEVEL=INFO

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Primary database connection (Supabase PostgreSQL)
# Format: postgresql://user:password@host:port/database?options
# Get this from: Supabase Dashboard > Settings > Database > Connection string
DATABASE_URL=postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres

# -----------------------------------------------------------------------------
# SUPABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Supabase project URL
# Get this from: Supabase Dashboard > Settings > API
SUPABASE_URL=https://[YOUR-PROJECT-REF].supabase.co

# Supabase anonymous key (public key)
# Get this from: Supabase Dashboard > Settings > API > anon public
SUPABASE_ANON_KEY=eyJ[YOUR-ANON-KEY]

# Supabase service role key (private key - keep secure!)
# Get this from: Supabase Dashboard > Settings > API > service_role secret
SUPABASE_SERVICE_KEY=eyJ[YOUR-SERVICE-KEY]

# -----------------------------------------------------------------------------
# AI SERVICE CONFIGURATION
# -----------------------------------------------------------------------------
# OpenAI API Key
# Get this from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-[YOUR-OPENAI-API-KEY]

# Anthropic API Key  
# Get this from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-[YOUR-ANTHROPIC-API-KEY]

# Default AI model to use (gpt-5 is the latest as of August 2025)
AI_DEFAULT_MODEL=gpt-5

# Fallback AI model (claude-sonnet-4-20250514 is the latest Anthropic model)
AI_FALLBACK_MODEL=claude-sonnet-4-20250514

# Maximum tokens for AI requests
AI_MAX_TOKENS=4096

# AI request timeout in milliseconds
AI_TIMEOUT=30000

# -----------------------------------------------------------------------------
# AUTHENTICATION & SECURITY
# -----------------------------------------------------------------------------
# JWT secret key for token signing (generate a strong random string)
# You can use: openssl rand -base64 64
JWT_SECRET=[GENERATE-A-STRONG-SECRET-KEY-64-CHARS-MIN]

# Alternative Flask secret key (for compatibility)
FLASK_SECRET_KEY=[SAME-AS-JWT-SECRET-OR-DIFFERENT]

# BCrypt rounds for password hashing (10-15 recommended)
BCRYPT_ROUNDS=12

# -----------------------------------------------------------------------------
# REDIS CONFIGURATION (Optional - for caching and queues)
# -----------------------------------------------------------------------------
# Redis connection URL
# For local development: redis://localhost:6379
# For hosted Redis: redis://username:password@host:port/db
REDIS_URL=redis://localhost:6379

# -----------------------------------------------------------------------------
# CELERY/QUEUE CONFIGURATION (Optional - for background tasks)
# -----------------------------------------------------------------------------
# Message broker URL (usually same as Redis)
CELERY_BROKER_URL=redis://localhost:6379

# Result backend URL (usually same as Redis)
CELERY_RESULT_BACKEND=redis://localhost:6379

# -----------------------------------------------------------------------------
# RATE LIMITING CONFIGURATION
# -----------------------------------------------------------------------------
# Rate limit window in milliseconds (default: 15 minutes)
RATE_LIMIT_WINDOW=900000

# Maximum requests per window per user
RATE_LIMIT_MAX_REQUESTS=1000

# -----------------------------------------------------------------------------
# DEVELOPMENT ONLY (Remove in production)
# -----------------------------------------------------------------------------
# Enable additional debugging features
VITE_DEBUG_MODE=true

# Mock external services in development
VITE_MOCK_EXTERNAL_APIS=false

# =============================================================================
# ENVIRONMENT SETUP INSTRUCTIONS
# =============================================================================
#
# 1. Copy this file to .env in the project root
# 2. Fill in all the required values below
# 3. Never commit the .env file to version control
#
# CRITICAL SECRETS (Required for basic functionality):
# - DATABASE_URL
# - SUPABASE_URL
# - SUPABASE_ANON_KEY
# - SUPABASE_SERVICE_KEY
# - OPENAI_API_KEY
# - ANTHROPIC_API_KEY
# - JWT_SECRET
#
# OPTIONAL SECRETS (Required for full functionality):
# - REDIS_URL
# - CELERY_BROKER_URL
# - CELERY_RESULT_BACKEND
#
# =============================================================================
# SECURITY NOTES
# =============================================================================
#
# 1. NEVER commit real API keys or secrets to version control
# 2. Use strong, unique passwords and API keys
# 3. Rotate secrets regularly in production
# 4. Use different secrets for development/staging/production
# 5. Monitor API usage and set up billing alerts
# 6. Enable 2FA on all service accounts (OpenAI, Anthropic, Supabase)
# 7. Restrict API key permissions to minimum required scope
#
# =============================================================================
